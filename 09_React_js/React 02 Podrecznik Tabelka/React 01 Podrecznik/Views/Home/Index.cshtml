<!DOCTYPE html>
<html>
<head>
    <title>Witaj, React</title>
    <meta charset="utf-8">
</head>
<body>
    <div id="app">
        <!-- tutaj będzie renderowana moja aplikacja -->
    </div>
    <script src="react/book/react.js"></script>
    <script src="react/book/react-dom.js"></script>
    <!--KOMPONENTY-->
    <script>
        var headers = [
            "Tytuł", "Autor", "Język", "Rok wydania", "Sprzedaż"
        ];

        var data = [
            ["The Lord of the Rings", "J. R. R. Tolkien", "Angielski", "1954–1955",
        "150 milionów"],
        ["Le Petit Prince (The Little Prince)", "Antoine de Saint-Exupéry",
            "Francuski", "1943", "140 milionów"],
            ["Harry Potter and the Philosopher's Stone", "J. K. Rowling",
                "Angielski", "1997", "107 milionów"],
            ["And Then There Were None", "Agatha Christie", "Angielski", "1939",
                "100 milionów"],
            ["Dream of the Red Chamber", "Cao Xueqin", "Chiński", "1754–1791",
                "100 milionów"],
            ["The Hobbit", "J. R. R. Tolkien", "Angielski", "1937", "100 milionów"],
            ["She: A History of Adventure", "H. Rider Haggard", "Angielski", "1887",
                "100 milionów"],
        ];

        var Excel = React.createClass({
            displayName: 'Excel',
            propTypes: {
                headers: React.PropTypes.arrayOf(
                    React.PropTypes.string
                ),
                initialData: React.PropTypes.arrayOf(
                    React.PropTypes.arrayOf(
                        React.PropTypes.string
                    )
                ),
            },

            getInitialState: function () {
                return {
                    data: this.props.initialData,
                    sortby: null,
                    descending: false,
                    edit: null, // {row: index, cell: index}
                };
            },

            //sortowanie (argument e)
            _sort: function (e) {
                var column = e.target.cellIndex;
                var data = this.state.data.slice();
                var descending = this.state.sortby === column && !this.state.descending;
                data.sort(function (a, b) {
                    return descending
                        ? (a[column] < b[column] ? 1 : -1)
                        : (a[column] > b[column] ? 1 : -1);
                });
                this.setState({
                    data: data,
                    sortby: column,
                    descending: descending,
                });
            },

            _showEditor: function (e) {
                this.setState({
                    edit: {
                        row: parseInt(e.target.dataset.row, 10),
                        cell: e.target.cellIndex,
                    }
                });
            },
            _save: function (e) {
                e.preventDefault();
                var input = e.target.firstChild;
                var data = this.state.data.slice();
            },
            //przycisk szukania - cos nie dziala
            render: function () {
                return (
                    React.DOM.div(null,
                        this._renderToolbar(),
                        this._renderTable()
                    )
                );
            },
            _renderToolbar: function () {
                return React.DOM.button(
                    {
                        onClick: this._toggleSearch,
                        className: 'toolbar',
                    },
                    'wyszukaj'
                );
            },
            _renderSearch: function () {
                if (!this.state.search) {
                    return null;

                }
                return (
                    React.DOM.tr({ onChange: this._search },
                        this.props.headers.map(function (_ignore, idx) {
                            return React.DOM.td({ key: idx },
                                React.DOM.input({
                                    type: 'text',
                                    'data-idx': idx,
                                })
                            );
                        })
                    )
                );
            },

            render: function () {
                return (
                    React.DOM.table(null,
                        React.DOM.thead({ onClick: this._sort },
                            React.DOM.tr(null,
                                this.props.headers.map(function (title, idx) {
                                    if (this.state.sortby === idx) {
                                        title += this.state.descending ? ' \u2191' : ' \u2193'
                                    }
                                    return React.DOM.th({ key: idx }, title);
                                }, this)
                            ),
                            React.DOM.tbody({ onDoubleClick: this._showEditor },
                                this.state.data.map(function (row, rowidx) {
                                    return (
                                        React.DOM.tr({ key: rowidx },
                                            row.map(function (cell, idx) {
                                                var content = cell;
                                                var edit = this.state.edit;
                                                if (edit && edit.row === rowidx && edit.cell === idx) {
                                                    data[this.state.edit.row][this.state.edit.cell] = input.value;
                                                    this.setState({
                                                        edit: null, // koniec edytowania
                                                        data: data,
                                                    });
                                                }
                                                content = React.DOM.form({ onSubmit: this._save },
                                                    React.DOM.input({
                                                        type: 'text',
                                                        defaultValue: content,
                                                    })
                                                );
                                                return React.DOM.td({
                                                    key: idx,
                                                    'data-row': rowidx
                                            }, content);
                                }, this)
                            )
                        );
            }, this)
)
                        )
                    )
                );
            }
        });

        ReactDOM.render(
            React.createElement(Excel, {
                headers: headers,
                initialData: data,
            }),
            document.getElementById("app")
        );


    </script>
</body>
</html>