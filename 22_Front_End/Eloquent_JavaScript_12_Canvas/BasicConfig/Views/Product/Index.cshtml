<!DOCTYPE html>
<html>
<head>
    <title>Aplikacja</title>
    <meta charset="utf-8">
</head>
<body class="container">
    <div>
        TEST
    </div>
    <p>Normal HTML here.</p>

    <!--SVG-->
    <svg xmlns="http://www.w3.org/2000/svg">
        <circle r="50" cx="50" cy="50" fill="red" />
        <rect x="120" y="5" width="90" height="90" stroke="blue" fill="none" />
    </svg>

    <canvas width="500" height="500"></canvas>

    <script>
        //svg
        let circle = document.querySelector("circle");
        circle.setAttribute("fill", "cyan");

        //stroke
        /*
        let cx = document.querySelector("canvas").getContext("2d");
        cx.strokeStyle = "blue";
        cx.strokeRect(5, 5, 50, 50);
        cx.lineWidth = 5;
        cx.strokeRect(135, 5, 50, 50);

        //path
        let cx = document.querySelector("canvas").getContext("2d");
        cx.beginPath();
        for (let y = 10; y < 100; y += 10) {
            cx.moveTo(10, y);
            cx.lineTo(90, y);
        }
        cx.stroke();
        let cx = document.querySelector("canvas").getContext("2d");
        cx.beginPath();
        cx.moveTo(50, 10);
        cx.lineTo(10, 70);
        cx.lineTo(90, 70);
        cx.fill();

        //curve
        let cx = document.querySelector("canvas").getContext("2d");
        cx.beginPath();
        cx.moveTo(10, 90);
        // control=(60,10) goal=(90,90)
        cx.quadraticCurveTo(60, 10, 90, 90);
        cx.lineTo(60, 10);
        cx.closePath();
        cx.stroke();

        //curve
        let cx = document.querySelector("canvas").getContext("2d");
        cx.beginPath();
        cx.moveTo(10, 90);
        // control1=(10,10) control2=(90,10) goal=(50,90)
        cx.bezierCurveTo(10, 10, 90, 10, 50, 90);
        cx.lineTo(90, 10);
        cx.lineTo(10, 10);
        cx.closePath();
        cx.stroke();

//curve
        let cx = document.querySelector("canvas").getContext("2d");
        cx.beginPath();
        // center=(50,50) radius=40 angle=0 to 7
        cx.arc(50, 50, 40, 0, 7);
        // center=(150,50) radius=40 angle=0 to ½
        cx.arc(150, 50, 40, 0, 0.5 * Math.PI);
        cx.stroke();

        //pie chart
        const results = [
            { name: "Satisfied", count: 1043, color: "lightblue" },
            { name: "Neutral", count: 563, color: "lightgreen" },
            { name: "Unsatisfied", count: 510, color: "pink" },
            { name: "No comment", count: 175, color: "silver" }
        ];

        let cx = document.querySelector("canvas").getContext("2d");
        let total = results
            .reduce((sum, { count }) => sum + count, 0);
        // Start at the top
        let currentAngle = -0.5 * Math.PI;
        for (let result of results) {
            let sliceAngle = (result.count / total) * 2 * Math.PI;
            cx.beginPath();
            // center=100,100, radius=100
            // from current angle, clockwise by slice's angle
            cx.arc(100, 100, 100,
                currentAngle, currentAngle + sliceAngle);
            currentAngle += sliceAngle;
            cx.lineTo(100, 100);
            cx.fillStyle = result.color;
            cx.fill();
        }

        //text
        let cx = document.querySelector("canvas").getContext("2d");
        cx.font = "28px Georgia";
        cx.fillStyle = "fuchsia";
        cx.fillText("I can draw text, too!", 10, 50);

        //sprite img
        let cx = document.querySelector("canvas").getContext("2d");
        let img = document.createElement("img");
        img.src = "img/player.png";
        let spriteW = 24, spriteH = 30;
        img.addEventListener("load", () => {
            let cycle = 0;
            setInterval(() => {
                cx.clearRect(0, 0, spriteW, spriteH);
                cx.drawImage(img,
                    // source rectangle
                    cycle * spriteW, 0, spriteW, spriteH,
                    // destination rectangle
                    0, 0, spriteW, spriteH);
                cycle = (cycle + 1) % 8;
            }, 120);
        });

        //transformation
        let cx = document.querySelector("canvas").getContext("2d");
        cx.scale(3, .5);
        cx.beginPath();
        cx.arc(50, 50, 40, 0, 7);
        cx.lineWidth = 3;
        cx.stroke();

        //rotate
        let cx = document.querySelector("canvas").getContext("2d");
        let img = document.createElement("img");
        img.src = "img/player.png";
        let spriteW = 24, spriteH = 30;
        img.addEventListener("load", () => {
            flipHorizontally(cx, 100 + spriteW / 2);
            cx.drawImage(img, 0, 0, spriteW, spriteH,
                100, 0, spriteW, spriteH);
        });

        */

        //fractal
        let cx = document.querySelector("canvas").getContext("2d");
        function branch(length, angle, scale) {
            cx.fillRect(0, 0, 1, length);
            if (length < 8) return;
            cx.save();
            cx.translate(0, length);
            cx.rotate(-angle);
            branch(length * scale, angle, scale);
            cx.rotate(2 * angle);
            branch(length * scale, angle, scale);
            cx.restore();
        }
        cx.translate(300, 0);
        branch(60, 0.5, 0.8);
    </script>
</body>
</html>